{
  "static": {
    "formats": "=> try{static.domains.values.collect{|d| try{d.locations.values.collect{|l|l.format}} }.flatten.compact.uniq} || []",
    // include a copy of provider.json in case any of the configured domains happens to match provider.domain
    "bootstrap_files": {
      "domain": "= provider.domain",
      "enabled": "= !! try{static.domains[provider.domain]}",
      "provider_json": "=> static.bootstrap_files.enabled ? try{nodes_like_me[:services => 'webapp'].values.first.definition_files['provider']} : nil",
      "client_version": "= static.bootstrap_files.enabled ? provider.client_version : nil"
    }
  },
  "service_type": "public_service",
  "firewall": {
    "static": {
      "from": "*",
      "to": "= ip_address",
      "port": [80, 443]
    }
  }
}